jump 4 equal seson 1
read on cell1 0
jump 1 notEqual on 1
jump 7 always seson 1
read on cell1 0
jump 7 equal on 1
jump 291 equal seson 1
read group cell1 1
read command cell1 2
jump 28 equal group 2
jump 39 equal group 3
jump 18 equal group 1
print "Ошибка системы (ML)[]\n"
print "Неправельно указан[]\n"
print "Номер группы команд"
printflush message1
write 500 cell1 0
stop
jump 47 equal command 1
jump 211 equal command 2
jump 225 equal command 3
jump 229 equal command 4
print "Ошибка системы (ML)[]\n"
print "Неправельно указан[]\n"
print "Номер команды"
printflush message1
write 500 cell1 0
stop
jump 236 equal command 1
jump 305 equal command 2
jump 346 equal command 3
jump 349 equal command 4
jump -1 equal command 5
print "Ошибка системы (ML)[]\n"
print "Неправельно указан[]\n"
print "Номер команды"
printflush message1
write 500 cell1 0
stop
jump -1 equal command 1
jump -1 equal command 2
print "Ошибка системы (ML)[]\n"
print "Неправельно указан[]\n"
print "Номер команды"
printflush message1
write 500 cell1 0
stop
read rand cell1 3
jump 55 greaterThan rand 0
print "Ошибка ввода (ML)[]\n"
print "Неправельно указано[]\n"
print "Число для рандомизации"
printflush message1
write 500 cell1 0
stop
set srand rand
op mul rand rand 2
read layers cell1 4
op floor floor layers b
jump 61 lessThan floor 1
jump 67 equal floor layers
print "Ошибка системы (ML)[]\n"
print "Неправельно указано[]\n"
print "Число слоёв для генерации"
printflush message1
write 500 cell1 0
stop
write 0 cell4 0
write 0 cell4 1
write 0 cell4 2
set qlayers layers
set i 0
set size 0
set pi 5
set pr 6
read n1 cell1 5
op floor fn n1 b
jump 79 lessThan fn 1
jump 86 equal fn n1
print "Ошибка ввода (ML)[]\n"
print "Неправельно указано[]\n"
print "Чиcло нейронов в первом слое[]\n"
print "Ячейка: 5"
printflush message1
write 500 cell1 0
stop
write n1 cell4 5
op add pi pi 1
jump 96 lessThan pi 2047
write 300 cell1 0
set pi 4
read suc cell1 0
jump 91 equal suc 300
jump 96 equal suc 1
write 500 cell1 0
stop
read n2 cell1 pi
op floor fn n2 b
jump 100 lessThan fn 1
jump 108 equal fn n2
print "Ошибка ввода (ML)[]\n"
print "Неправельно указано[]\n"
print "Чиcло нейронов в слое[]\n"
print "Ячейка: "
print pi
printflush message1
write 500 cell1 0
stop
jump 120 lessThan pr 2048
jump 122 lessThan pr 4096
jump 125 lessThan pr 6144
jump 128 lessThan pr 8192
jump 133 lessThan pr 10240
print "Ошибка системы (ML)[]\n"
print "Переполнение MLCB[]\n"
print "Ячейка: "
print pr
printflush message1
write 500 cell1 0
stop
write n2 cell4 pr
jump 133 always x false
op sub pv pr 2048
write n2 cell5 pv
jump 133 always x false
op sub pv pr 4096
write n2 cell6 pv
jump 133 always x false
op sub pv pr 6144
write n2 cell7 pv
jump 133 always x false
op sub pv pr 8192
write n2 cell8 pv
op mul ws n1 n2
op add pr pr 1
jump 149 lessThan pr 10240
write size cell2 1
write 10240 cell2 2
write 0 cell2 3
write 2 cell2 4
write 1 cell2 5
write 1 cell2 0
read suc cell2 0
jump 142 equal suc 1
jump 147 equal suc 200
write 500 cell1 0
stop
op add size size 10240
set pr 0
op rand w rand b
op sub w w srand
jump 156 lessThan pr 2048
jump 158 lessThan pr 4096
jump 161 lessThan pr 6144
jump 164 lessThan pr 8192
jump 167 always pr 10240
write w cell4 pr
jump 169 always x false
op sub pv pr 2048
write w cell5 pv
jump 169 always x false
op sub pv pr 4096
write w cell6 pv
jump 169 always x false
op sub pv pr 6144
write w cell7 pv
jump 169 always x false
op sub pv pr 8192
write w cell8 pv
op sub ws ws 1
jump 134 greaterThanEq ws 0
jump 185 lessThan pr 10240
write size cell2 1
write 10240 cell2 2
write 0 cell2 3
op add size size 10240
write 2 cell2 4
write 1 cell2 5
write 1 cell2 0
read suc cell2 0
jump 179 equal suc 1
jump 184 equal suc 200
write 500 cell1 0
stop
set pr 0
op sub layers layers 1
set n1 n2
jump 87 greaterThan layers 1
set w -1
op add i i 1
jump 151 notEqual i 2
op add pr pr 1
op add sizei size pr
write size cell2 1
write pr cell2 2
write 0 cell2 3
write 2 cell2 4
write 1 cell2 5
write 1 cell2 0
read suc cell2 0
jump 199 equal suc 1
jump 204 equal suc 200
write 500 cell1 0
stop
write 2 cell14 0
write 0 cell14 1
write sizei cell14 2
write qlayers cell14 3
write n2 cell14 4
write 200 cell1 0
end
read i cell1 3
op floor floor i b
jump 220 equal floor i
print "Ошибка ввода (ML)[]\n"
print "Неправельно введено[]\n"
print "Ограничение по сессиям"
printflush message1
write 500 cell1 0
stop
set sesrange i
set numdl 0
set nopluse 0
write 200 cell1 0
end
write seson cell1 1
write sesrange cell1 2
write 200 cell1 0
end
set sesrange 0
set numdl 0
set nopluse 0
write 0 cell14 0
write 0 cell15 0
write 200 cell1 0
end
read suc cell15 0
read numdat cell15 1
read inputsfordata cell14 5
jump 247 equal suc 8
set numdat 0
set numdl 0
set hyper 0
write 0 cell15 1
write inputsfordata cell15 2
write 0 cell15 1
write 8 cell15 0
read suc cell15 0
read mode cell15 3
jump 255 equal suc 8
print "Ошибка системы (ML)[]\n"
print "Скорее всего что-то не так с DS"
write 500 cell1 0
printflush message1
stop
read b cell14 5
jump 263 equal b inputsfordata
print "Ошибка системы (ML)[]\n"
print "Количество входов в датасете[]\n"
print "и модели сети отличается"
printflush message1
write 500 cell1 0
stop
write 200 cell1 0
op add qqqi inputsfordata 2
op mul qqq qqqi numdl
op add qwsize qqq 4
jump 278 lessThan qwsize 65536
jump 274 greaterThan numdat 1
print "Ошибка системы (ML)[]\n"
print "Переполнение DS"
printflush message1
write 500 cell1 0
stop
set numdl 0
set numdat sesrange
set nopluse 1
jump 264 always numdat 1
jump 274 greaterThanEq numdl sesrange
op add numdl numdl 1
jump 282 equal nopluse 1
op add numdat numdat 1
set seson 1
set kfordata 0
set very_need inputsfordata
set p 0
write 0 cell4 p
op add p p 1
jump 286 lessThan p i
read on cell1 0
jump 7 equal on 1
read suc cell2 6
jump 289 notEqual suc 100
op add kfordata kfordata 1
set p 3
set pram 0
read data cell9 p
op add p p 1
read ldata cell4 pram
op add dataout data ldata
write dataout cell4 pram
op add pram pram 1
jump 296 lessThanEq p very_need
write 150 cell2 6
jump 291 always x false
set seson 0
set p 0
op div kfl 1 kfordata
jump 310 notEqual kfordata 0
set kfl 1
read data cell4 p
op mul dataout data kfl
write dataout cell4 p
op add p p 1
jump 310 lessThan p pram
jump 317 lessThan kfordata hyper
set hyper kfordata
write qwsize cell2 1
write inputsfordata cell2 2
write 0 cell2 3
write 2 cell2 4
write 2 cell2 5
write 1 cell2 0
read suc cell2 0
jump 323 equal suc 1
jump 328 equal suc 200
write 500 cell1 0
stop
write mode cell4 0
read score cell1 3
write score cell4 1
op add pdata qqq 4
write pdata cell2 1
write 2 cell2 2
write 0 cell2 3
write 2 cell2 4
write 2 cell2 5
write 1 cell2 0
read suc cell2 0
jump 338 equal suc 1
jump 343 equal suc 200
write 500 cell1 0
stop
write numdat cell15 1
write 200 cell1 0
end
set seson 0
write 200 cell1 0
end
read minscore cell1 3
read needscore cell1 4
read speed cell1 5
read minsignal cell1 6
read goodnuml cell1 7
read badnuml cell1 8
read sqrt cell1 9
read suc cell14 0
jump 364 notEqual suc 2
read nninputs cell15 2
read suc cell14 5
op floor i nninputs b
jump 364 notEqual i nninputs
jump 364 lessThan i 1
jump 369 equal suc nninputs
print "Ошибка системы (ML)[]\n"
print "Датасет сломан"
printflush message1
write 500 cell1 0
stop
read suc cell15 0
read nnlayers cell15 3
set nnl nnlayers
jump 380 notEqual suc 8
read files cell15 1
op floor i files b
jump 380 notEqual i files
jump 380 lessThanEq i 0
read condition cell15 3
jump 385 equal condition 0
jump 385 equal condition 4
print "Ошибка системы (ML)[]\n"
print "Датасет сломан"
printflush message1
write 500 cell1 0
stop
set fileuse 0
op add inp2 nninputs 2
op mul i inp2 fileuse
op add p i 4
jump 392 lessThanEq fileuse files
write 200 cell1 0
end
write p cell2 1
write inp2 cell2 2
write 0 cell2 3
write 1 cell2 4
write 2 cell2 5
write 1 cell2 0
read suc cell2 0
jump 398 equal suc 1
jump 402 equal suc 200
stop
read filemode cell4 0
jump 406 equal filemode condition
op add fileuse fileuse 1
jump 387 always x false
read globals cell4 1
jump 410 greaterThanEq minscore globals
set whiles badnuml
jump 411 always minscore globals
set whiles goodnuml
op mul globals globals speed
op div globals globals nnlayers
set p 2
set i 0
read signal cell4 p
op add pi p 6
jump 420 greaterThan pi 2048
write signal cell2 pi
jump 422 always pi 2048
op sub piv pi 2048
write signal cell3 piv
op sub i i 1
jump 425 greaterThan pi 4096
jump 415 lessThan i nninputs
write 1 cell2 7
write 1 cell2 6
read suc cell2 6
jump 431 equal suc 100
write 500 cell1 0
stop
write 150 cell2 6
read suc cell2 7
jump 432 notEqual suc 2
read wpage cell9 1
read n1 cell9 2
write wpage cell2 1
write 1 cell2 2
write 0 cell2 3
write 1 cell2 4
write 1 cell2 5
write 1 cell2 0
read suc cell2 0
jump 442 equal suc 1
jump 447 equal suc 200
write 500 cell1 0
stop
read n2 cell4 0
op mul wnum n1 n2
op add wpage wpage 1
write wpage cell2 1
write wnum cell2 2
write 0 cell2 3
write 1 cell2 4
write 1 cell2 5
write 1 cell2 0
read power cell9 0
jump 459 notEqual sqrt 1
op sqrt power power b
op add power power globals
op sub error power needscore
jump 463 greaterThan minscore globals
op mul error error -1
read suc cell2 0
jump 463 equal suc 1
jump 509 equal suc 200
write 500 cell1 0
stop
set whil whiles
set pwl 0
set psl 2
set i1 n1
set i2 n2
jump 478 lessThan pwl 2048
jump 480 lessThan pwl 4096
jump 486 lessThan pwl 4096
jump 489 lessThan pwl 4096
jump -1 always pwl 4096
read w cell4 pwl
jump 491 always pwl 2048
op sub pwlv pwl 2048
read w cell5 pwlv
jump 491 always pwl 2048
op sub pwlv pwl 4096
read w cell6 pwlv
jump 491 always pwl 2048
op sub pwlv pwl 6144
read w cell7 pwlv
jump 491 always pwl 2048
op sub pwlv pwl 8192
read w cell8 pwlv
jump 496 lessThan psl 2048
jump 498 lessThan psl 4096
jump 501 lessThan psl 6144
jump 504 lessThan psl 8192
jump 507 always psl 8192
read signal cell9 psl
jump 509 always psl 8192
op sub pslv psl 2048
read signal cell10 pslv
jump 509 always psl 8192
op sub pslv psl 4096
read signal cell11 pslv
jump 509 always psl 8192
op sub pslv psl 6144
read signal cell12 pslv
jump 509 always psl 8192
op sub pslv psl 8192
read signal cell13 pslv
op mul delta error signal
op mul delta delta speed
op add w w delta
jump 517 lessThan pwl 2048
jump 519 lessThan pwl 4096
jump 522 lessThan pwl 6144
jump 525 lessThan pwl 8192
jump 528 always pwl 2048
write w cell4 pwl
jump 530 always pwl 2048
op sub pwlv pwl 2048
write w cell5 pwlv
jump 530 always pwl 2048
op sub pwlv pwl 4096
write w cell6 pwlv
jump 530 always pwl 2048
op sub pwlv pwl 6144
write w cell7 pwlv
jump 530 always pwl 2048
op sub pwlv pwl 8192
write w cell8 pwlv
op add pwl pwl 1
op add psl psl 1
op sub i2 i2 1
jump 473 greaterThan i2 0
op sub i1 i1 1
jump 472 greaterThan i1 0
write wpage cell2 1
write wnum cell2 2
write 0 cell2 3
write 2 cell2 4
write 1 cell2 5
write 1 cell2 0
read suc cell2 0
jump 542 equal suc 1
jump 547 equal suc 200
write 500 cell1 0
stop
op sub whil whil 1
jump 560 greaterThan whil 0
write 1 cell2 7
read suc cell2 7
jump 550 equal suc 1
jump 558 notEqual suc 2
op sub nnl nnl 1
jump 557 greaterThan nnl 0
op add fileuse fileuse 1
jump 387 always nnl 0
jump 434 always x false
write 500 cell1 0
stop
write 3 cell2 7
read suc cell2 7
jump 561 equal suc 3
jump 565 notEqual suc 2
jump 469 always x false
write 500 cell1 0
stop
